coherence <- lda %>%
tidyr::unnest(coherence) %>%
dplyr::group_by(k) %>%
dplyr::summarise(coherence = mean(coherence))
coherence %>%
ggplot2::ggplot(ggplot2::aes(x = k, y = coherence))+
ggplot2::geom_line()+
ggplot2::theme_light()
}
plot_k_coherence(lda)
unique(coherence$k)
coherence <- lda %>%
tidyr::unnest(coherence) %>%
dplyr::group_by(k) %>%
dplyr::summarise(coherence = mean(coherence))
unique(coherence$k)
coherence %>%
ggplot2::ggplot(ggplot2::aes(x = k, y = coherence))+
ggplot2::geom_line()+
ggplot2::theme_light()+
ggplot2::scale_x_continuous(breaks = uniue(coherence$k))
?unique
coherence %>%
ggplot2::ggplot(ggplot2::aes(x = k, y = coherence))+
ggplot2::geom_line()+
ggplot2::theme_light()+
ggplot2::scale_x_continuous(breaks = unique(coherence$k))
lda <- my_fit_LDAs(dtm, k_opts = c(4, 6, 7, 10))
coherence <- lda %>%
tidyr::unnest(coherence) %>%
dplyr::group_by(k) %>%
dplyr::summarise(coherence = mean(coherence))
coherence %>%
ggplot2::ggplot(ggplot2::aes(x = k, y = coherence))+
ggplot2::geom_line()+
ggplot2::theme_light()+
ggplot2::scale_x_continuous(breaks = unique(coherence$k))
coherence %>%
ggplot2::ggplot(ggplot2::aes(x = k, y = coherence))+
ggplot2::geom_line()+
ggplot2::geom_point()+
ggplot2::theme_light()+
ggplot2::scale_x_continuous(breaks = unique(coherence$k))
coherence %>%
ggplot2::ggplot(ggplot2::aes(x = k, y = coherence))+
ggplot2::geom_line()+
ggplot2::geom_point(size = 10)+
ggplot2::theme_light()+
ggplot2::scale_x_continuous(breaks = unique(coherence$k))
coherence %>%
ggplot2::ggplot(ggplot2::aes(x = k, y = coherence))+
ggplot2::geom_line()+
ggplot2::geom_point(size = 6)+
ggplot2::theme_light()+
ggplot2::scale_x_continuous(breaks = unique(coherence$k))
coherence %>%
ggplot2::ggplot(ggplot2::aes(x = k, y = coherence))+
ggplot2::geom_line()+
ggplot2::geom_point(size = 4)+
ggplot2::theme_light()+
ggplot2::scale_x_continuous(breaks = unique(coherence$k))
coherence %>%
ggplot2::ggplot(ggplot2::aes(x = k, y = coherence))+
ggplot2::geom_line()+
ggplot2::geom_point(size = coherence)+
ggplot2::theme_light()+
ggplot2::scale_x_continuous(breaks = unique(coherence$k))
coherence %>%
ggplot2::ggplot(ggplot2::aes(x = k, y = coherence))+
ggplot2::geom_line()+
ggplot2::geom_point()+
ggplot2::theme_light()+
ggplot2::scale_x_continuous(breaks = unique(coherence$k))
document()
rm(plot_k_coherence)
document()
library(JPackage)
library(magrittr)
data <- readr::read_csv("~/Documents_local/segmentr_shiny/data/shiny_test_one.csv")
dtm <- SegmentR::make_DTMs(data, mention_content, 10)
lda <- my_fit_LDAs(dtm, k_opts = c(4, 6, 7, 10))
plot_k_coherence(lda)
use_r("plot_bars_coherence")
library(magrittr)
data <- readr::read_csv("~/Documents_local/segmentr_shiny/data/shiny_test_one.csv")
dtm <- SegmentR::make_DTMs(data, mention_content, 10)
lda <- my_fit_LDAs(dtm, k_opts = c(4, 6, 7, 10))
lda %>%
dplyr::filter(k == selected_k)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence))+
ggplot2::geom_col()
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence))+
ggplot2::geom_col()
lda %>%
dplyr::filter(k == selected_k)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence))+
ggplot2::geom_col()+
ggplot2::scale_color_viridis_d()
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence))+
ggplot2::geom_col()+
ggplot2::scale_color_viridis_d()
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence))+
ggplot2::geom_col()+
ggplot2::theme_light()
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence))+
ggplot2::geom_col()+
ggplot2::theme_bw()
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence))+
ggplot2::geom_col()+
ggplot2::theme_bw()
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence))+
ggplot2::geom_col()+
ggplot2::theme_light()
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence, fill = topic))+
ggplot2::geom_col()+
ggplot2::theme_light()+
ggplot2::scale_fill_viridis_d()
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence, fill = topic))+
ggplot2::geom_col()+
ggplot2::theme_light()+
ggplot2::scale_fill_viridis_d()+
ggplot2::theme(legend.position = "none")
?legend.position
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence, fill = topic))+
ggplot2::geom_col()+
ggplot2::theme_light()+
ggplot2::scale_fill_viridis_d()+
ggplot2::theme(legend.position = "none",
axis.text = element_text(size = 8))
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence, fill = topic))+
ggplot2::geom_col()+
ggplot2::theme_light()+
ggplot2::scale_fill_viridis_d()+
ggplot2::theme(legend.position = "none",
axis.text = ggplot2::element_text(size = 8))
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence, fill = topic))+
ggplot2::geom_col()+
ggplot2::theme_light()+
ggplot2::scale_fill_viridis_d()+
ggplot2::theme(legend.position = "none",
axis.text = ggplot2::element_text(size = 10))
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence, fill = topic))+
ggplot2::geom_col()+
ggplot2::theme_light()+
ggplot2::scale_fill_viridis_d()+
ggplot2::theme(legend.position = "none",
axis.text = ggplot2::element_text(size = 12))
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence, fill = topic))+
ggplot2::geom_col()+
ggplot2::theme_light()+
ggplot2::scale_fill_viridis_d()+
ggplot2::theme(legend.position = "none",
axis.title = ggplot2::element_text(size = 12))
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence, fill = topic))+
ggplot2::geom_col()+
ggplot2::theme_light()+
ggplot2::scale_fill_viridis_d()+
ggplot2::theme(legend.position = "none",
axis.title = ggplot2::element_text(size = 14))
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence, fill = topic))+
ggplot2::geom_col()+
ggplot2::theme_light()+
ggplot2::scale_fill_viridis_d()+
ggplot2::theme(legend.position = "none",
axis.title = ggplot2::element_text(size = 14))+
labs(x = NULL)
lda %>%
dplyr::filter(k == 4)%>%
tidyr::unnest(coherence)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence, fill = topic))+
ggplot2::geom_col()+
ggplot2::theme_light()+
ggplot2::scale_fill_viridis_d()+
ggplot2::theme(legend.position = "none",
axis.title = ggplot2::element_text(size = 14))+
ggplot2::labs(x = NULL)
plot_bars_coherence <- function(lda, selected_k, ...){
lda %>%
dplyr::filter(k == selected_k, ...)%>%
tidyr::unnest(coherence, ...)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence, fill = topic, ...))+
ggplot2::geom_col(...)+
ggplot2::theme_light(...)+
ggplot2::scale_fill_viridis_d(...)+
ggplot2::theme(legend.position = "none",
axis.title = ggplot2::element_text(size = 14))+
ggplot2::labs(x = NULL, ...)
}
rm(list=ls())
document()
check()
globalVariables(c("k", "coherence", "topic","text", "permalink", "tone" ,"mention_content", "n_gram", "count", "ngram", "df", "data","pattern", "before", "after"))
use_package('tidyr')
use_package('ggplot2')
document()
library(magrittr)
data <- readr::read_csv("~/Documents_local/segmentr_shiny/data/shiny_test_one.csv")
dtm <- SegmentR::make_DTMs(data, mention_content, 10)
lda <- my_fit_LDAs(dtm, k_opts = c(4, 6, 7, 10))
future::plan(multisession(workers = availableCores()-1))
my_fit_LDAs <- function(dtms,
k_opts = 2:3,
iter_opts = 2000,
coherence_n = 10) {
# Set up tuning grid for LDA model
lda_tuning <- tidyr::expand_grid(k = k_opts,
alpha = 1,
delta = 1,
iter = iter_opts) %>%
dplyr::mutate(alpha = 1/k, delta = 0.1/k)
# Add tuning parameters for each query-source combo
lda_setup <- dtms %>%
dplyr::group_by(freq_cutoff) %>%
dplyr::mutate(lda_tuning = list(lda_tuning)) %>%
dplyr::ungroup() %>%
tidyr::unnest(cols = lda_tuning)
# Define function to run LDA for different values of k
run_lda <- function(dtm, k, alpha, delta, iter) {
topicmodels::LDA(x = dtm,
method = "Gibbs",
k = k,
control = list(seed = 1,
iter = iter,
alpha = alpha,
delta = delta))
}
options(future.rng.onMisuse = "ignore")
# Fit
lda <-lda_setup %>%
dplyr::mutate(lda = furrr::future_pmap(.l = list(dtm = dtm,
k = k,
alpha = alpha,
delta = delta,
iter = iter),
.f = run_lda), seed = TRUE) %>%
dplyr::select(data, dtm, freq_cutoff, n_terms, n_docs, k, alpha, delta, iter, lda)
#Add coherence function to LDAs
.get_coherence <- function(dtm, lda, M = 10) {
dtm_matrix <- Matrix::sparseMatrix(i=dtm$i,
j=dtm$j,
x=dtm$v,
dims=c(dtm$nrow, dtm$ncol),
dimnames = dtm$dimnames)
phi <-  lda %>%
generics::tidy(matrix = "beta") %>%
tidyr::pivot_wider(names_from = "term", values_from = "beta",
names_repair = "minimal") %>%
dplyr::select(-topic) %>%
as.matrix()
coherence <- textmineR::CalcProbCoherence(phi,
dtm_matrix,
M = M)
topic <- paste("topic_", as.character((1:length(coherence))), sep = "")
tibble::tibble(topic, coherence)
}
#No need to use furrr::future_map2() here as it's unstable and calc is quick.
lda %>%
dplyr::mutate(coherence = purrr::map2(.x = dtm,
.y = lda,
.f = .get_coherence,
M = coherence_n))
}
library(furrr)
future::plan(multisession(workers = availableCores()-1))
lda <- my_fit_LDAs(dtm, k_opts = c(4, 6, 7, 10))
plot_k_coherence(lda)
plot_bars_coherence(lda, k = 4)
plot_bars_coherence(lda, selected_k = 4)
plot_bars_coherence(lda, k == 4)
plot_bars_coherence(lda, selected_k = 5)
lda
plot_bars_coherence(lda, selected_k = 6)
plot_bars_coherence(lda, selected_k = 10)
lda <- my_fit_LDAs(dtm, k_opts = c(4, 6, 7, 10, 20))
plot_bars_coherence(lda, selected_k = 20)
plot_bars_coherence(lda, selected_k = 10)
plot_bars_coherence <- function(lda, selected_k, ...){
lda %>%
dplyr::mutate(topic = as.factor(topic), ...)%>%
dplyr::filter(k == selected_k, ...)%>%
tidyr::unnest(coherence, ...)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence, fill = topic, ...))+
ggplot2::geom_col(...)+
ggplot2::theme_light(...)+
ggplot2::scale_fill_viridis_d(...)+
ggplot2::theme(legend.position = "none",
axis.title = ggplot2::element_text(size = 14), ...)+
ggplot2::labs(x = NULL, ...)
}
plot_bars_coherence(lda, selected_k = )
lda
plot_bars_coherence <- function(lda, selected_k, ...){
lda %>%
dplyr::filter(k == selected_k, ...)%>%
tidyr::unnest(coherence, ...)%>%
dplyr::mutate(topic = as.factor(topic), ...)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence, fill = topic, ...))+
ggplot2::geom_col(...)+
ggplot2::theme_light(...)+
ggplot2::scale_fill_viridis_d(...)+
ggplot2::theme(legend.position = "none",
axis.title = ggplot2::element_text(size = 14), ...)+
ggplot2::labs(x = NULL, ...)
}
plot_bars_coherence(lda, selected_k = )
plot_bars_coherence(lda, selected_k = 10)
plot_bars_coherence <- function(lda, selected_k, ...){
lda %>%
dplyr::filter(k == selected_k, ...)%>%
tidyr::unnest(coherence, ...)%>%
dplyr::mutate(topic = factor(topic, ordered = TRUE), ...)%>%
ggplot2::ggplot(ggplot2::aes(x = topic, y = coherence, fill = topic, ...))+
ggplot2::geom_col(...)+
ggplot2::theme_light(...)+
ggplot2::scale_fill_viridis_d(...)+
ggplot2::theme(legend.position = "none",
axis.title = ggplot2::element_text(size = 14), ...)+
ggplot2::labs(x = NULL, ...)
}
plot_bars_coherence(lda, selected_k = 10)
lda %>%
unnest(coherence)
lda %>%
tidyr::unnest(coherence)
lda %>%
tidyr::unnest(coherence) %>%
dplyr::mutate(number = stringr::str_extract(topic, "\\d+"))%>%
dplyr::select(number)
lda %>%
tidyr::unnest(coherence) %>%
dplyr::mutate(number = as.numeric(stringr::str_extract(topic, "\\d+")))%>%
dplyr::select(number)
plot_bars_coherence <- function(lda, selected_k, ...){
lda %>%
dplyr::filter(k == selected_k, ...)%>%
tidyr::unnest(coherence, ...)%>%
dplyr::mutate(number = as.numeric(stringr::str_extract(topic, "\\d+")))%>%
ggplot2::ggplot(ggplot2::aes(x = reorder(topic, number), y = coherence, fill = topic, ...))+
ggplot2::geom_col(...)+
ggplot2::theme_light(...)+
ggplot2::scale_fill_viridis_d(...)+
ggplot2::theme(legend.position = "none",
axis.title = ggplot2::element_text(size = 14), ...)+
ggplot2::labs(x = NULL, ...)
}
plot_bars_coherence(lda, selected_k = 10)
plot_bars_coherence(lda, selected_k = 20)
plot_bars_coherence <- function(lda, selected_k, ...){
lda %>%
dplyr::filter(k == selected_k, ...)%>%
tidyr::unnest(coherence, ...)%>%
#extract the number of topics to later order the plots by, so topic_1 > topic_2 not topic_1 > topic_10 when k >= 10
dplyr::mutate(number = as.numeric(stringr::str_extract(topic, "\\d+")))%>%
ggplot2::ggplot(ggplot2::aes(x = reorder(topic, number), y = coherence, fill = topic, ...))+
ggplot2::geom_col(...)+
ggplot2::theme_light(...)+
ggplot2::scale_fill_viridis_d(...)+
ggplot2::theme(legend.position = "none",
axis.title = ggplot2::element_text(size = 14), ...)+
ggplot2::labs(x = NULL, ...)
}
plot_bars_coherence(lda, selected_k = 20)
plot_k_coherence(lda)
#' Scree plot for topic coherence analysis
#'
#' @param lda Latent Dirichlet Allocation object
#'
#' @return ggplot2 object
#' @export
#'
plot_k_coherence <- function(lda){
coherence <- lda %>%
tidyr::unnest(coherence) %>%
dplyr::group_by(k) %>%
dplyr::summarise(coherence = mean(coherence),
median = median(coherence))
coherence %>%
ggplot2::ggplot(ggplot2::aes(x = k, y = coherence))+
ggplot2::geom_line()+
ggplot2::geom_line(aes(x = k, y = median, color = "midnightblue"))+
ggplot2::geom_point()+
ggplot2::theme_light()+
ggplot2::scale_x_continuous(breaks = unique(coherence$k))
}
plot_k_coherence(lda)
plot_bars_coherence(lda, selected_k = 20)
#' Scree plot for topic coherence analysis
#'
#' @param lda Latent Dirichlet Allocation object
#'
#' @return ggplot2 object
#' @export
#'
plot_k_coherence <- function(lda){
coherence <- lda %>%
tidyr::unnest(coherence) %>%
dplyr::group_by(k) %>%
dplyr::summarise(coherence = mean(coherence),
median = median(coherence))
coherence %>%
ggplot2::ggplot(ggplot2::aes(x = k, y = coherence))+
ggplot2::geom_line()+
ggplot2::geom_line(ggplot2::aes(x = k, y = median, color = "midnightblue"))+
ggplot2::geom_point()+
ggplot2::theme_light()+
ggplot2::scale_x_continuous(breaks = unique(coherence$k))
}
plot_k_coherence(lda)
#' Scree plot for topic coherence analysis
#'
#' @param lda Latent Dirichlet Allocation object
#'
#' @return ggplot2 object
#' @export
#'
plot_k_coherence <- function(lda){
coherence <- lda %>%
tidyr::unnest(coherence) %>%
dplyr::group_by(k) %>%
dplyr::summarise(coherence = mean(coherence))
coherence %>%
ggplot2::ggplot(ggplot2::aes(x = k, y = coherence))+
ggplot2::geom_line()+
ggplot2::geom_point()+
ggplot2::theme_light()+
ggplot2::scale_x_continuous(breaks = unique(coherence$k))
}
plot_bars_coherence(lda, selected_k = 10)
rm(listls())
rm(list=ls())
doucment()
library(devtools)
library(roxygen2)
check()
document()
check()
use_package("stats")
document()
check()
document()
check()
use_r("par_fit_LDAs")
use_package("purrr")
use_package("future")
use_package("topicmodels")
use_package("Matrix")
use_package("generics")
use_package("textmineR")
document()
check()
use_package("furrr")
document()
check()
data <- readr::read_csv("~/Documents_local/segmentr_shiny/data/shiny_test_one.csv")
dtms <- SegmentR::make_DTMs(data, mention_content, min_freq = c(5, 10, 15))
par_fit_LDAs(dtms, k_opts = 4)
rm(list=ls())
document()
check()
git checkout https://github.com/jpcompartir/JPackage.git/playing
git branch new_funcs
git status
library(JPackage)
library(dplyr)
library(ggplot2)
